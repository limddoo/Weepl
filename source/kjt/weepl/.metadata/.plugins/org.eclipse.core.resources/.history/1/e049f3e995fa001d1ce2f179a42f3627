package com.weepl.repository;

import java.time.LocalDateTime;
import java.util.List;

import javax.persistence.EntityManager;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.thymeleaf.util.StringUtils;

import com.querydsl.core.QueryResults;
import com.querydsl.core.types.Predicate;
import com.querydsl.core.types.dsl.BooleanExpression;
import com.querydsl.jpa.impl.JPAQueryFactory;
import com.weepl.dto.MainMhinfoDto;
import com.weepl.dto.MhinfoSearchDto;
import com.weepl.entity.Mhinfo;
import com.weepl.entity.QMhinfo;



public class MemberRepositoryCustomImpl implements MemberRepositoryCustom {

	private JPAQueryFactory queryFactory;

	public MemberRepositoryCustomImpl(EntityManager em) {
		this.queryFactory = new JPAQueryFactory(em);
	}
	
	
	private BooleanExpression regDtsAfter(String searchDateType) {
		
		LocalDateTime dateTime = LocalDateTime.now();
		
		if(StringUtils.equals("all", searchDateType) || searchDateType==null) {
			return null;
		} else if(StringUtils.equals("1d", searchDateType)) {
			dateTime = dateTime.minusDays(1);
		} else if(StringUtils.equals("1w", searchDateType)){
			dateTime = dateTime.minusWeeks(1);
		} else if(StringUtils.equals("1m", searchDateType)){
		dateTime = dateTime.minusMonths(1);
		} else if(StringUtils.equals("6m", searchDateType)){
		dateTime = dateTime.minusMonths(6);
		}
		return QMhinfo.mhinfo.regDt.after(dateTime);
	}
	
	private BooleanExpression searchByLike(String searchBy, String searchQuery) {
		
		if(StringUtils.equals("title", searchBy)){
			return QMhinfo.mhinfo.title.like("%" + searchQuery + "%");
			} else if(StringUtils.equals("createdBy", searchBy)){
			return QMhinfo.mhinfo.createdBy.like("%" + searchQuery + "%");
			}
			return null;
	}
	
	@Override
	public Page<Mhinfo> getAdminMhinfoPage(MhinfoSearchDto mhinfoSearchDto, Pageable pageable) {
		
		QueryResults<Member> results = queryFactory
				.selectFrom(QMhinfo.mhinfo)
				.where(regDtsAfter(mhinfoSearchDto.getSearchDateType()), searchByLike(mhinfoSearchDto.getSearchBy(), mhinfoSearchDto.getSearchQuery()))
				.orderBy(QMhinfo.mhinfo.cd.desc())
				.offset(pageable.getOffset())
				.limit(pageable.getPageSize())
				.fetchResults();
		
		List<Member> content = results.getResults();
		long total = results.getTotal();
		return new PageImpl<>(content, pageable, total);
	}

	@Override
	public Page<Member> getUserMhinfoPage(MhinfoSearchDto mhinfoSearchDto, Pageable pageable) {
		
		QueryResults<Mhinfo> results = queryFactory
				.selectFrom(QMhinfo.mhinfo)
				.where(regDtsAfter(mhinfoSearchDto.getSearchDateType()), searchByLike(mhinfoSearchDto.getSearchBy(), mhinfoSearchDto.getSearchQuery()))
				.orderBy(QMhinfo.mhinfo.cd.desc())
				.offset(pageable.getOffset())
				.limit(pageable.getPageSize())
				.fetchResults();
		
		List<Mhinfo> content = results.getResults();
		long total = results.getTotal();
		return new PageImpl<>(content, pageable, total);
	}
//	@Override
//	public Page<MainMhinfoDto> getMainMhinfoPage(MhinfoSearchDto mhinfoSearchDto, Pageable pageable) {
//		// TODO Auto-generated method stub
//		return null;
//	}

	

//	@Override
//	public Page<MainMhinfoDto> getMainMhinfoPage(MhinfoSearchDto mhinfoSearchDto, Pageable pageable){
//		QMhinfo mhinfo = QMhinfo.mhinfo;
//		QBoardImg boardImg = QBoardImg.boardImg;
//		
//		QueryResults<MainMhinfoDto> results = queryFactory
//				.select(
//					new QMainMhinfoDto(
//							mhinfo.cd,
//							mhinfo.title,
//							mhinfo.content
//							mhinfo.imgUrl)
//				)
//				.from(boardImg)
//				.join(boardImg.mhinfo, mhinfo)
//				.where(boardImg.repimgYn.eq("Y"))
//				.where(titleLike(mhinfoSearchDto.getSearchQuery()))
//				.orderBy(mhinfo.cd.desc())
//				.offset(pageable.getOffset())
//				.limit(pageable.getPageSize())
//				.fetchResults();
//	}
}
